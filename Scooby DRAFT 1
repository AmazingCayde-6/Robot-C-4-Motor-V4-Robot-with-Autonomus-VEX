#pragma config(Motor,  port1,           RightmotorF,   tmotorVex393_HBridge, openLoop, reversed, driveRight)
#pragma config(Motor,  port2,           RightmotorB,   tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port3,           Wrist,         tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port4,           Claw,          tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           Arm,           tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port9,           LeftmotorF,    tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port10,          LeftmotorB,    tmotorVex393_HBridge, openLoop, reversed, driveLeft)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#pragma platform(VEX2)


#pragma competitionControl(Competition)


#include "Vex_Competition_Includes.c"



void pre_auton()
{

	bStopTasksBetweenModes = true;

}

///Autonomous portion///
task autonomous()
{
	moveMotor(RightmotorF, 2000, milliseconds, -127);
	moveMotor(RightmotorB, 2000, milliseconds, -127);

	moveMotor(LeftmotorF, 2000, milliseconds, 127);
	moveMotor(LeftmotorB, 2000, milliseconds, 127);
	stopMultipleMotors(RightmotorB, RightmotorF, LeftmotorB, LeftmotorF);

}

///Driver control///
task usercontrol()

{
	while (1 == 1)

	{
		motor[LeftmotorF] = vexRT[Ch3];
		motor[LeftmotorB] = vexRT[Ch3];
		motor[RightmotorF] = vexRT[Ch2];
		motor[RightmotorB] = vexRT[Ch2];



		if(vexRT[Btn6U] == 1)
		{
			motor[Claw] = 127;
		}

		else if (vexRT[Btn6D] == 1)
		{
			motor[Claw] = -127;
		}

		else
		{
			motor[Claw] = 0;
		}

		if(vexRT[Btn5U] == 1)
		{
			motor[Arm] = 127;
		}

		else if (vexRT[Btn5D] == 1)
		{
			motor[Arm] = -127;
		}

		else
		{
			motor[Arm] = 0;
		}

		if(vexRT[Btn8U] == 1)
		{
			motor[Wrist] = 127;
		}

		else if (vexRT[Btn8D] == 1)
		{
			motor[Wrist] = -127;
		}

		else
		{
			motor[Wrist] = 0;
		}
	}
}
