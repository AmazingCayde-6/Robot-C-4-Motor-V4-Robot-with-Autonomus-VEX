#pragma config(Motor,  port1,           RightmotorF,   tmotorVex393_HBridge, openLoop, reversed, driveRight)
#pragma config(Motor,  port2,           RightmotorB,   tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port3,           Wrist,         tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port4,           Claw,          tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           armMotor,      tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port9,           LeftmotorF,    tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port10,          LeftmotorB,    tmotorVex393_HBridge, openLoop, reversed, driveLeft)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#pragma platform(VEX2)


#pragma competitionControl(Competition)


#include "Vex_Competition_Includes.c"



void pre_auton()
{

	bStopTasksBetweenModes = true;

}

///Autonomous portion///
task autonomous ()

{

forward(1260, milliseconds, 127);

backward(1260, milliseconds, 127);

turnLeft(1450, milliseconds, 127);

moveMotor(port5, 1300, milliseconds, 127);

moveMotor(port3, 2500, milliseconds, 127);

moveMotor(port4, 2800, milliseconds, 127);

moveMotor(port5, 1300, milliseconds, -70);

}

///Driver control///
task usercontrol()
{
	while (1 == 1)
	{
		motor[LeftmotorF] = vexRT[Ch3] / 2;
		motor[RightmotorF] = vexRT[Ch2] / 2;
		motor[LeftmotorB] = vexRT[Ch3] / 2;
		motor[RightmotorB] = vexRT[Ch2] / 2;

		if(vexRT[Btn6U] == 1)
		{
			motor[Claw] = 127;
		}

		else if (vexRT[Btn6D] == 1)
		{
			motor[Claw] = -127;
		}

		else
		{
			motor[Claw] = 0;
		}

		if(vexRT[Btn5U] == 1)
		{
			motor[armMotor] = 40;
		}
		else if(vexRT[Btn5D] == 1)
		{
			motor[armMotor] = -40;
		}
		else
		{
			motor[armMotor] = 0;
		}
		///Lowered the value for speed of armMotor
		if(vexRT[Btn8U] == 1)
		{
			motor[Wrist] = 127;
		}
		else if (vexRT[Btn8D] == 1)
		{
			motor[Wrist] = -127;
		}
		else
		{
			motor[Wrist] = 0;
		}
		///Wrist motor works///
	}
}
